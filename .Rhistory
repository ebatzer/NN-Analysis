################################################################################
### Data preprocessing
# Loading necessary packages
library(codyn) # Temporal analysis
library(ggplot2) # Figure plotting
library(tidyverse) # Data manipulation
library(lubridate)
library(data.table)
library(vegetarian) # Exponentiated diversity indices (Hill Numbers)
library(lme4) # Linear mixed effects models
library(vegan)
################################################################################
# Loading in dataset (up to 2017 data)
cov.long <- fread('C:/Users/ebatz/Dropbox/NutNet Data/full-cover-09-April-2018.csv',
na.strings = c('NA','NULL'))
# Subsetting to just California sites
site.subset <- c("mcla.us", "hopl.us", "sier.us", "elliot.us", "sedg.us",
"cdcr.us", "konz.us", "cbgb.us", "trel.us", "cdpt.us")
cov.long <- cov.long[cov.long$site_code %in% site.subset,]
# Choose identifying variables
ids <- c('site_code','year','year_trt', 'block','plot','trt')
# Remove non-live percent cover esimates
cov.long[,max_cover:=as.numeric(max_cover)]
cov.long <- cov.long[live==1]
# Cast long into wide
plot.sp.mat <- dcast(cov.long,site_code+year+block+plot+trt+year_trt ~ Taxon,value.var='max_cover',
fun.aggregate = sum,drop=T,fill=0)
head(plot.sp.mat)[,1:10]
climate <- read.csv("C:/Users/ebatz/Box Sync/Eviner Lab shared/Evan/Research Projects/NutNet/Data/sites-precip_ETo_20180228.csv")
head(climate)
clim_sites <- unique(climate$site_code)
clim_sites
def_wtryear = function(x, site){
if(site == "CA"){
wtryr <- if_else(as.numeric(x[3]) >= 9, as.numeric(x[4]) + 1, as.numeric(x[4]))
}else if(site == "MW"){
wtryr <- if_else(as.numeric(x[3]) >= 9, as.numeric(x[4]) + 1, as.numeric(x[4]))
}else{
stop("Site must be 'CA' or 'MW'")
}
return(wtryr)
}
ca.sites = c("mcla.us", "hopl.us", "sier.us", "elliot.us", "sedg.us")
climate$loc = if_else(climate$site_code %in% ca.sites, "CA", "MW")
climate$wtryr = apply(climate, 1, def_wtryear, site = "CA")
climate_agg <- climate %>% group_by(site_code, wtryr, loc) %>%
summarise(tot_precip = sum(ppt), tot_ETo = sum(ETo))
ungroup(climate_agg) %>%
filter(wtryr >= (as.numeric(min(plot.sp.mat$year))) - 1) %>%
ggplot(., aes(x = wtryr, y = tot_precip, color = site_code)) +
geom_line() +
facet_wrap(~loc) +
ggtitle("Mean Annual Precipitation")
climate_agg %>%
group_by(site_code, loc) %>%
summarise(meanprecip = mean(na.omit(tot_precip)),
meanETo = mean(na.omit(tot_ETo))) %>%
arrange(loc, meanprecip) %>%
ggplot(., aes(x = site_code, y = meanprecip, fill = loc))+
geom_bar(stat = "identity")
climate_agg %>%
group_by(site_code, loc) %>%
summarise(meanprecip = mean(na.omit(tot_precip)),
meanETo = mean(na.omit(tot_ETo))) %>%
arrange(loc, meanprecip)
climate_winter <- climate %>% group_by(site_code, wtryr, loc) %>%
filter(month >= 11 | month == 1) %>%
summarise(win_precip = sum(ppt), win_ETo = mean(ETo))
climate_spring <- climate %>% group_by(site_code, wtryr, loc) %>%
filter(month <= 4 & month > 1) %>%
summarise(spr_precip = sum(ppt), spr_ETo = mean(ETo))
climate_summer <- climate %>% group_by(site_code, wtryr, loc) %>%
filter(month <= 7 & month > 4) %>%
summarise(sum_precip = sum(ppt), sum_ETo = mean(ETo))
climate_fall <- climate %>% group_by(site_code, wtryr, loc) %>%
filter(month <= 10 & month > 7) %>%
summarise(fal_precip = sum(ppt), fal_ETo = mean(ETo))
climate_lagged <- climate %>%
mutate(wtryr = wtryr + 1) %>%
group_by(site_code, wtryr, loc) %>%
summarise(lag_precip = sum(ppt), lag_ETo = mean(ETo))
climate_all <- Reduce(function(x, y) merge(x, y, all=TRUE), list(climate_agg, climate_lagged,
climate_winter, climate_spring,
climate_summer, climate_fall))
names(climate_all)[2] = "year"
siteName <- "mcla.us"
distmethod <- "bray"
trts <- c("Control", "N", "P", "K")
cap_model  <- function(siteName, distmethod, trts, plot.sp.mat, climate_all){
ord.sp.mat <- plot.sp.mat[plot.sp.mat$trt %in% trts & plot.sp.mat$site_code == siteName,]
# Combine climate data with community dataset
ord.sp.mat$year <- as.numeric(ord.sp.mat$year)
ord.sp.mat <- right_join(climate_all[!is.na(climate_agg$tot_precip),], ord.sp.mat, by = c("year", "site_code"))
ord.sp.mat <- na.omit(ord.sp.mat)
sp.mat <- ord.sp.mat[ord.sp.mat$site_code == siteName, -(1:19)]
sp.mat <- wisconsin(sp.mat)
env.mat <- ord.sp.mat[ord.sp.mat$site_code == siteName, 1:19]
env.mat$year_trt = as.numeric(env.mat$year_trt)
env.subset <- env.mat[,c(4:15, 18:19)]
mat.dist <- vegdist(sp.mat, method = "bray")
mod0 <- capscale(mat.dist ~ 1, data = env.subset)
mod1 <- capscale(mat.dist ~ . * . , data = env.subset)
mod_step <- step(mod0, scope = formula(mod1), test = "perm", trace = FALSE)
return(mod_step)
}
mod.output <- cap_model(siteName, distmethod, trts, plot.sp.mat, climate_all)
mod.output
plot(mod.output)
siteName <- "hopl.us"
distmethod <- "bray"
trts <- c("Control", "N", "P", "K")
mod.output <- cap_model(siteName, distmethod, trts, ord.sp.mat, climate_all)
siteName <- "hopl.us"
distmethod <- "bray"
trts <- c("Control", "N", "P", "K")
mod.output <- cap_model(siteName, distmethod, trts, plot.sp.mat, climate_all)
mod.output
plot(mod.output)
