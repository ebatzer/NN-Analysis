full_table
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 +
managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
plot.descriptions
# Subsetting species matrix by these site codes
soil.chars = soil.chars %>%
filter(year_trt == 0) %>%
mutate(block = as.factor(block),
plot = as.factor(plot))
View(soil.chars %>% filter(site_code == "mcla.us"))
# Selecting parameters of interest
soil.stdized = soil.chars %>%
select(site_code, pct_N, pct_C, ppm_P, ppm_K, pH) %>%
na.omit() %>%
group_by(site_code) %>%
mutate_if(is.numeric, log) %>%
summarise(mean_N = mean(pct_N),
mean_C = mean(pct_C),
mean_P = mean(ppm_P),
mean_K = mean(ppm_K),
mean_pH = mean(pH),
sd_N = sd(pct_N),
sd_C = sd(pct_C),
sd_P = sd(ppm_P),
sd_K = sd(ppm_K),
var_pH = sd(pH)) %>%
mutate(cv_N = sd_N / mean_N,
cv_C = sd_C / mean_C,
cv_P = sd_P / mean_P,
cv_K = sd_K / mean_K) %>%
filter_all(any_vars(is.finite(.))) %>%
ungroup() %>%
select(-contains("sd")) %>%
rename("sd_pH" = "var_pH")
soil.stdized %>%
gather(key = "var", value = "val", -site_code) %>%
ggplot(aes(x = val)) +
geom_histogram() +
facet_wrap(~var, scales = "free")
soil.stdized <- soil.stdized[!is.infinite(rowSums(soil.stdized %>% select(-site_code))),]
soilcor = cor(soil.stdized %>% na.omit() %>% select(cv_N, cv_P, cv_C, cv_K,
mean_N, mean_P, mean_C, mean_K, mean_pH, sd_pH))
corrplot(soilcor, method="circle")
diag(solve(soilcor))
plot.descriptions %<%
mutate(mean_C = scale(pct_C))
plot.descriptions %>%
mutate(mean_C = scale(pct_C))
plot.descriptions %>%
filter(year_trt == 0) %>%
select(site_code, total_mass) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(pct_C))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(pct_C))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(pct_C),
mean_P = mean(ppm_P),
mean_N = mean(pct_N),
mean_K = mean(ppm_K),
mean_pH = mean(ph))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(pct_C),
mean_P = mean(ppm_P),
mean_N = mean(pct_N),
mean_K = mean(ppm_K),
mean_pH = mean(pH))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(na.omit(pct_C)),
mean_P = mean(na.omit(ppm_P)),
mean_N = mean(na.omit(pct_N)),
mean_K = mean(na.omit(ppm_K)),
mean_pH = mean(na.omit(pH)))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(na.omit(pct_C)),
mean_P = mean(na.omit(ppm_P)),
mean_N = mean(na.omit(pct_N)),
mean_K = mean(na.omit(ppm_K)),
mean_pH = mean(na.omit(pH)),
managed = unique(managed),
burned = unique(burned),
grazed = unique(grazed),
anthropogenic = unique(anthropogenic))
plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(na.omit(pct_C)),
mean_P = mean(na.omit(ppm_P)),
mean_N = mean(na.omit(pct_N)),
mean_K = mean(na.omit(ppm_K)),
mean_pH = mean(na.omit(pH)),
managed = unique(managed),
burned = unique(burned),
grazed = unique(grazed),
anthropogenic = unique(anthropogenic)) %>%
filter(site_code %in% full_table$site_code)
biomass_model <-  plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(na.omit(pct_C)),
mean_P = mean(na.omit(ppm_P)),
mean_N = mean(na.omit(pct_N)),
mean_K = mean(na.omit(ppm_K)),
mean_pH = mean(na.omit(pH)),
managed = unique(managed),
burned = unique(burned),
grazed = unique(grazed),
anthropogenic = unique(anthropogenic)) %>%
filter(site_code %in% full_table$site_code)
prodmod <- lm(spatial_mean_biomass ~ log(mean_C) + log(mean_P) + log(mean_K) + log(mean_N) + log(mean_pH) + MAP_v2 + MAT_v2 +
managed + burned + grazed + anthropogenic ,
data = biomass_model)
biomass_model <-  plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = mean(na.omit(pct_C)),
mean_P = mean(na.omit(ppm_P)),
mean_N = mean(na.omit(pct_N)),
mean_K = mean(na.omit(ppm_K)),
mean_pH = mean(na.omit(pH)),
managed = unique(managed),
burned = unique(burned),
grazed = unique(grazed),
anthropogenic = unique(anthropogenic),
MAP_v2 = unique(MAP_v2),
MAT_v2 = unique(MAT_v2)) %>%
filter(site_code %in% full_table$site_code)
prodmod <- lm(spatial_mean_biomass ~ log(mean_C) + log(mean_P) + log(mean_K) + log(mean_N) + log(mean_pH) + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
summary(prodmod)
prodmod <- lm(spatial_mean_biomass ~ log(mean_C) + log(mean_P) + log(mean_K) + log(mean_N) + log(mean_pH) + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
summary(prodmod)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
biomass_model <-  plot.descriptions %>%
filter(year_trt == 0) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(total_mass)),
spatial_cv_biomass = sd(na.omit(total_mass)) / mean(na.omit(total_mass)),
mean_C = log(mean(na.omit(pct_C))),
mean_P = log(mean(na.omit(ppm_P))),
mean_N = log(mean(na.omit(pct_N))),
mean_K = log(mean(na.omit(ppm_K))),
mean_pH = log(mean(na.omit(pH))),
managed = unique(managed),
burned = unique(burned),
grazed = unique(grazed),
anthropogenic = unique(anthropogenic),
MAP_v2 = unique(MAP_v2),
MAT_v2 = unique(MAT_v2)) %>%
filter(site_code %in% full_table$site_code)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
summary(prodmod)
plot(prodmod)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
plot(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
prodmod <- lm(spatial_mean_biomass ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
plot(prodmod)
summary(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = biomass_model)
summary(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ scale(mean_C) + scale(mean_P) + scale(mean_K) + scale(mean_N) + scale(mean_pH) + scale(MAP_v2) + scale(MAT_v2) + managed + burned + grazed + anthropogenic ,
data = biomass_model)
plot(prodmod)
summary(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ mean_C + mean_P + mean_K + mean_N + mean_pH + MAP_v2 + MAT_v2 + managed + burned + grazed + anthropogenic ,
data = full_table)
summary(prodmod)
full_table
prodmod <- lm(log(spatial_mean_biomass) ~ scale(mean_C) + scale(mean_P) + scale(mean_K) + scale(mean_N) + scale(mean_pH) + scale(MAP_v2) + scale(MAT_v2) + managed + burned + grazed + anthropogenic ,
data = biomass_model)
plot(prodmod)
summary(prodmod)
summary(prodmod)
predict(prodmod,
newdata = plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
mean_C = log(na.omit(pct_C)),
mean_P = log(na.omit(ppm_P)),
mean_N = log(na.omit(pct_N)),
mean_K = log(na.omit(ppm_K)),
mean_pH = log(na.omit(pH)))
)
predict(prodmod,
newdata = plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
)
pred_biomass <- predict(prodmod,
newdata = plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
)
plot(exp(pred_biomass) ~ plot.descriptions$total_mass)
plot.descriptions$total_mass
length(plot.descriptions$total_mass)
plot(exp(pred_biomass) ~ plot.descriptions$total_mass %>% filter(year_trt == 0))
pred_biomass <- predict(prodmod,
newdata = plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
log_bmass = log(total_mass),
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
)
testdat <-         newdata = plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
log_bmass = log(total_mass),
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
testdat <- plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
log_bmass = log(total_mass),
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
pred_biomass <- predict(prodmod, newdata = testdat)
plot(exp(pred_biomass) ~ testdat$log_bmass)
plot(pred_biomass ~ testdat$log_bmass)
testdat$pred_biomass = pred_biomass
testdat$pred_biomass
prodmod <- lm(spatial_mean_biomass ~ scale(mean_C) + scale(mean_P) + scale(mean_K) + scale(mean_N) + scale(mean_pH) + scale(MAP_v2) + scale(MAT_v2) + managed + burned + grazed + anthropogenic ,
data = biomass_model)
plot(prodmod)
summary(prodmod)
prodmod <- lm(log(spatial_mean_biomass) ~ scale(mean_C) + scale(mean_P) + scale(mean_K) + scale(mean_N) + scale(mean_pH) + scale(MAP_v2) + scale(MAT_v2) + managed + burned + grazed + anthropogenic ,
data = biomass_model)
plot(prodmod)
summary(prodmod)
testdat <- plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
log_bmass = log(total_mass),
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
pred_biomass = predict(prodmod, newdata = testdat)
testdat$pred_biomass = pred_biomass
testdat <- plot.descriptions %>%
filter(year_trt == 0) %>%
mutate(
site_code = site_code,
log_bmass = log(total_mass),
mean_C = log(pct_C),
mean_P = log(ppm_P),
mean_N = log(pct_N),
mean_K = log(ppm_K),
mean_pH = log(pH))
pred_biomass = predict(prodmod, newdata = testdat)
testdat$pred_biomass = pred_biomass
testdat$pred_biomass = exp(pred_biomass)
testdat$pred_biomass = exp(pred_biomass)
biomass_test <- testdat %>%
select(site_code, pred_biomass) %>%
group_by(site_code) %>%
summarise(spatial_mean_biomass = mean(na.omit(pred_biomass)),
spatial_cv_biomass = sd(na.omit(pred_biomass)) / mean(na.omit(pred_biomass)))
biomass_test
left_join(biomass_test, biomass_summary_spatial)
biomass_test <- testdat %>%
select(site_code, pred_biomass) %>%
group_by(site_code) %>%
summarise(test_mean_biomass = mean(na.omit(pred_biomass)),
test_cv_biomass = sd(na.omit(pred_biomass)) / mean(na.omit(pred_biomass)))
left_join(biomass_test, biomass_summary_spatial)
biomass_test <- left_join(biomass_test, biomass_summary_spatial)
plot(test_cv_biomass ~ spatial_cv_biomass, data = biomass_test)
lm(test_cv_biomass ~ spatial_cv_biomass, data = biomass_test)
summary(lm(test_cv_biomass ~ spatial_cv_biomass, data = biomass_test))
biomass_test <- left_join(biomass_test,full_table)
summary(lm(test_cv_biomass ~ spatial_cv_biomass, data = biomass_test))
summary(lm(test_cv_biomass ~ spatial_cv_biomass + anthropogenic, data = biomass_test))
summary(lm(test_cv_biomass ~ spatial_cv_biomass + managed + burned + grazed + anthropogenic , data = biomass_test))
summary(lm(spatial_cv_biomass ~ test_cv_biomass + managed + burned + grazed + anthropogenic , data = biomass_test))
summary(lm(spatial_cv_biomass ~ test_cv_biomass + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2) , data = biomass_test))
plot_model(prodmod)
plot_model(prodmod)$data
plot_model(prodmod)$data %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
facet_wrap(~lev, nrow = 2) +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Model Coefficient Effects")
plot_model(prodmod)$data %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Model Coefficient Effects")
plot_model(prodmod)$data %>%
mutate(alpha_val = as.numeric(if_else(p.value < 0.05, 1, .3))) %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Model Coefficient Effects")
plot_model(prodmod)$data %>%
mutate(alpha_val = as.numeric(if_else(p.value < 0.05, 1, .3))) %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Estimated Productivity")
cv_test_mod <- lm(spatial_cv_biomass ~ test_cv_biomass + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test))
cv_test_mod <- lm(spatial_cv_biomass ~ test_cv_biomass + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
plot_model(cv_test_mod)$data %>%
mutate(alpha_val = as.numeric(if_else(p.value < 0.05, 1, .3))) %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Estimated Productivity")
cv_test_mod <- lm(scale(spatial_cv_biomass) ~ scale(test_cv_biomass) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
plot_model(cv_test_mod)$data %>%
mutate(alpha_val = as.numeric(if_else(p.value < 0.05, 1, .3))) %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Estimated Productivity")
summary(cv_test_mod)
plot(cv_test_mod)
cv_test_mod <- lm(log(spatial_cv_biomass) ~ scale(test_cv_biomass) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
summary(cv_test_mod)
plot(cv_test_mod)
cv_test_mod <- lm(log(scale(spatial_cv_biomass)) ~ scale(test_cv_biomass) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
summary(cv_test_mod)
plot(cv_test_mod)
summary(cv_test_mod)
cv_test_mod <- lm(log(scale(spatial_cv_biomass)) ~ log(scale(test_cv_biomass)) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
summary(cv_test_mod)
cv_test_mod <- lm(log(spatial_cv_biomass) ~ log(test_cv_biomass) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
summary(cv_test_mod)
cv_test_mod <- lm(scale(log(spatial_cv_biomass)) ~ scale(log(test_cv_biomass)) + managed + burned + grazed + anthropogenic + scale(MAP_v2) + scale(MAT_v2), data = biomass_test)
summary(cv_test_mod)
plot(cv_test)
plot(cv_test_mod)
plot_model(cv_test_mod)$data %>%
mutate(alpha_val = as.numeric(if_else(p.value < 0.05, 1, .3))) %>%
ggplot(aes(x = estimate,
y = term,
color = estimate > 0,
fill = estimate > 0,
alpha = I(alpha_val))) +
geom_vline(xintercept = 0) +
geom_segment(aes(x = conf.low,
xend = conf.high,
y = term,
yend = term),
size = 1) +
geom_point(size = 5, pch = 21, color = "black") +
theme_bw() +
xlab("Standardized Coefficient Estimate") +
ylab("Coefficient Name") +
guides(color = FALSE,
fill = FALSE) +
ggtitle("Estimated Productivity")
